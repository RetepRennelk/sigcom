import numpy as np


def bit_to_cell_demux(M, N_ldpc, CR):
    if CR == [2, 3]:
        lst = {(4,16200): [0, 1],
               (4,64800): [0, 1],
               (16,16200): [7,1,4,2,5,3,6,0],
               (16,64800): [7,1,4,2,5,3,6,0],
               (64,16200): [11,7,3,10,6,2,9,5,1,8,4,0],
               (64,64800): [11,7,3,10,6,2,9,5,1,8,4,0],
               (256,16200): [7,3,1,5,2,6,4,0],
               (256,64800): [7,2,9,0,4,6,13,3,14,10,15,5,8,12,11,1]}
    elif CR==[1,2] or || CR==[3,4] || CR==[4,5] || CR==[5,6]:
        lst = {(4,16200): [0,1],
               (4,64800): [0,1],
               (16,16200): [7,1,4,2,5,3,6,0],
               (16,64800): [7,1,4,2,5,3,6,0],
               (64,16200): [11,7,3,10,6,2,9,5,1,8,4,0],
               (64,64800): [11,7,3,10,6,2,9,5,1,8,4,0],
               (256,16200): [7,3,1,5,2,6,4,0],
               (256,64800): [15,1,13,3,8,11,9,5,10,6,4,7,12,2,14,0]}
    elif CR==[3,5]:
        lst = {(4,16200): [0,1],
               (4,64800): [0,1],
               (16,16200): [7,1,4,2,5,3,6,0],
               (16,64800): [0,5,1,2,4,7,3,6],
               (64,16200): [11,7,3,10,6,2,9,5,1,8,4,0],
               (64,64800): [2,7,6,9,0,3,1,8,4,11,5,10],
               (256,16200): [7,3,1,5,2,6,4,0],
               (256,64800): [2,11,3,4,0,9,1,8,10,13,7,14,6,15,5,12]}

    b2c = np.argsort(lst[(M,N_ldpc)])
    return b2c
